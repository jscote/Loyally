(function (DomainObject) {
    'use strict';

    var factory = function (eventDataAccess) {

        Object.defineProperty(this, 'dataAccess', {enumerable: true, value: eventDataAccess, writable: false});

    };

    factory.prototype.GetPersister = function () {
        return this.dataAccess.persister;
    };

    factory.prototype.getEventByIdentity = function (identity) {
        this.dataAccess.getEventByIdentity(identity);
    };

    factory.prototype.getNewInstance = function () {
        var domainObject = new DomainObject();

    };

    module.exports = factory;
})(require(Injector.getBasePath() + 'domainObjects/event'));